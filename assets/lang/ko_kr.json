{
    "app.title": "SQL 던전",
    "app.title.beginner": "SQL 던전 - 초급 -",
    "app.intro.text": "SQL 마법을 익히고 던전의 수수께끼를 풀어라!",
    "button.sandbox": "샌드박스",
    "button.ku_next": "구문 넥스트",
    "button.hint": "？",
    "game.inventory.title": "습득 마법",
    "game.mission.title": "미션",
    "game.schema.title": "개념 스키마",
    "game.editor.title": "마법 시전",
    "game.result.title": "실행 결과",
    "modal.hint.title": "힌트",
    "modal.close": "×",
    "game.editor.placeholder": "여기에 SQL을 입력...",
            
    "button.start": "새 게임",
    "button.load": "게임 불러오기",
    "button.retry": "다시 도전",
    "button.save": "저장",
    "button.execute": "실행",
    "button.shop": "상점 방문",
    "button.next_floor": "다음 층으로",
    "button.prev_floor": "이전 층으로",
    "button.next_dungeon": "다음 던전으로",
    "button.close": "닫기",
    "button.yes": "예",

    "panel.inventory": "습득 마법",
    "panel.mission": "미션",
    "panel.schema": "개념 스키마",
    "panel.spell": "마법 시전",
    "panel.result": "실행 결과",

    "status.gold": "💰 %s G",
    "status.energy": "⚡ %s E",

    "shop.title": "상점",
    "shop.hint.title": "힌트 구매",
    "shop.hint.confirm": "힌트를 보시겠습니까?\n💰 %s G가 필요합니다.",
    "shop.hint.sage": "현자의 목소리",
    "shop.hint.no_gold": "골드가 부족합니다!",

    "message.save_success": "저장 완료!",
    "message.load_success": "불러오기 완료!",
    "message.empty_query": "쿼리를 입력하세요.",
    "message.invalid_query": "잘못된 쿼리입니다.",
    "message.no_energy": "에너지가 부족합니다!",
    "message.unknown_spell": "아직 배우지 않은 마법 '%s'이(가) 포함되어 있습니다.",
    "message.incorrect": "오답입니다. 다시 도전하세요.",
    "message.correct": "정답! 쿼리 결과:",
    "message.clear": "클리어!",
    "message.clear_all": "모든 층을 클리어했습니다!",
    "message.next_spell": "현자의 목소리: \"다음은 아마... %s 구문일 것이다.\"",
    "message.purchase_success": "%s을(를) 구매했습니다!",
    "message.emulation_auto_accept": "Emulation produced results and was accepted.",
    "message.emulation_results": "Incorrect, but emulation returned results:",
    "message.incorrect_try": "Incorrect. Try again.",
    "message.correct_result": "Correct! Query result:",
    "message.load_failed": "Failed to load game data.",
    "message.sandbox_select_from": "샌드박스: SELECT ... FROM ... 만 실행할 수 있습니다.",
    "message.sandbox_result": "샌드박스 실행 결과:",
    "message.error_table_not_found": "이 테이블이 존재하지 않습니다: %s",
    "message.error_attribute_not_found": "이 속성이 존재하지 않습니다: %s",
    "message.error_where_column_missing": "WHERE 절의 컬럼을 찾을 수 없습니다: %s",
    "message.error_no_matching_rows": "조건에 맞는 행을 찾을 수 없습니다.",
    "message.dataset_label": "데이터셋:",
    "message.floor_label": "%s 층",
    "button.back_to_title": "타이틀로 돌아가기",

    "ui.back_to_title": "타이틀로 돌아가기",
    "ui.prev_floor": "이전 층으로",
    "ui.gold_status": "골드: %s",
    "ui.energy_status": "에너지: %s",
    "ui.schema_table": "테이블: %s",
    "ui.schema_column": "컬럼: %s",

    "settings.title": "설정",
    "settings.language_label": "언어:",
    "settings.enable_esc": "ESC로 대화상자 닫기",
    "settings.enable_save_shortcut": "Ctrl+S로 저장",
    "settings.export_json": "JSON 내보내기",
    "settings.import_json": "JSON 가져오기",
    "settings.save": "저장",
    "settings.cancel": "취소",

    "item.sqldungeons.java_coffee": "Java 커피",
    "item.sqldungeons.java_coffee.desc": "에너지가 5 회복.",
    "item.sqldungeons.postgres_ramen": "Postgres 라면",
    "item.sqldungeons.postgres_ramen.desc": "에너지가 15 회복.",
    "item.sqldungeons.oracle_steak": "Oracle 스테이크",
    "item.sqldungeons.oracle_steak.desc": "에너지가 30 회복.",
    "item.sqldungeons.ku_next": "다음 구문 (%d개)",
    "item.sqldungeons.ku_next.desc": "다음 SQL 구문을 알려주는 두루마리.",
    "item.sqldungeons.ku_next_pack": "다음 구문 팩",
    "item.sqldungeons.ku_next_pack.desc": "여러 개의 다음 구문 두루마리가 들어있는 팩(x5).",
    "item.sqldungeons.having": "일회용 'HAVING'",
    "item.sqldungeons.having.desc": "집계 후 필터링 마법을 1회만 사용 가능.",
    "item.sqldungeons.consumable_having": "소모형 HAVING",
    "item.sqldungeons.consumable_having.desc": "한 번 사용할 수 있는 HAVING을 부여하는 소모품.",


    "sql.keyword.select": "SELECT",
    "sql.keyword.from": "FROM",
    "sql.keyword.where": "WHERE",
    "sql.keyword.group": "GROUP",
    "sql.keyword.by": "BY",
    "sql.keyword.having": "HAVING",
    "sql.keyword.inner": "INNER",
    "sql.keyword.join": "JOIN",
    "sql.keyword.on": "ON",
    "sql.keyword.as": "AS",
    "sql.keyword.sum": "SUM",
    "sql.keyword.count": "COUNT",
    "sql.keyword.in": "IN",

    "schema.pk": "기본 키",
    "schema.ck": "후보 키",
    "schema.fk": "외래 키 (참조: %s)",
    "schema.type.integer": "정수",
    "schema.type.date": "날짜",
    "schema.type.text": "텍스트",
    "schema.not_null": "NOT NULL",

    "sql.next.select": "SELECT",
    "sql.next.from": "FROM",
    "sql.next.where": "WHERE / JOIN / GROUP BY",
    "sql.next.group": "GROUP BY / JOIN",
    "sql.next.having": "HAVING",
    "sql.next.join": "ON",
    "sql.next.unknown": "알 수 없음",

    "dungeon.tutorial.prefix": "튜토리얼 %s",
    "dungeon.beginner.prefix": "층 %s",

    "dungeon.tutorial.floor1.title": "튜토리얼1: SELECT로 모두 보기",
    "dungeon.tutorial.floor1.story": "편집기에 `SELECT * FROM table001` 을 입력하고 실행해 보세요.",
    "dungeon.tutorial.floor1.hint": "",

    "dungeon.tutorial.floor2.title": "튜토리얼2: 특정 열 선택하기",
    "dungeon.tutorial.floor2.story": "`SELECT (column) FROM (table)` 로 특정 열만 표시할 수 있습니다. 개념 스키마에서 테이블 이름을 확인하고 `message` 열을 찾아보세요.",
    "dungeon.tutorial.floor2.hint": "",

    "dungeon.tutorial.floor3.title": "튜토리얼3: WHERE로 필터링",
    "dungeon.tutorial.floor3.story": "`SELECT ... FROM ... WHERE (condition)` 으로 행을 필터링합니다. `fruits` 테이블에서 `color = 'Red'` 인 행의 `name`과 `color`를 표시해보세요.",
    "dungeon.tutorial.floor3.hint": "",

    "dungeon.tutorial.floor4.title": "튜토리얼4: ORDER BY로 정렬",
    "dungeon.tutorial.floor4.story": "`ORDER BY (column) [ASC|DESC]` 로 결과를 정렬합니다. `fruits` 테이블에서 `price` 오름차순으로 `name`과 `price`를 표시하세요.",
    "dungeon.tutorial.floor4.hint": "",

    "dungeon.tutorial.floor5.title": "튜토리얼5: GROUP BY로 집계",
    "dungeon.tutorial.floor5.story": "`SELECT ... FROM ... GROUP BY (column)` 으로 그룹화할 수 있습니다. `fruits`에서 `color`별로 개수를 세어보세요.",
    "dungeon.tutorial.floor5.hint": "",

    "dungeon.beginner.floor1.title": "초급 SELECT",
    "dungeon.beginner.floor1.story": "던전 입구입니다. `products`에서 `price >= 1000` 인 아이템의 `name`과 `price`를 모두 찾아보세요.",
    "dungeon.beginner.floor1.hint": "특정 조건으로 행을 좁히려면 `WHERE` 절을 사용하세요.",

    "dungeon.beginner.floor2.title": "GROUP BY 도전",
    "dungeon.beginner.floor2.story": "몬스터 소굴입니다. `monsters` 테이블에서 `species`별 몬스터 수를 세어보세요.",
    "dungeon.beginner.floor2.hint": "그룹별로 집계하려면 `GROUP BY` 를 사용하세요.",

    "dungeon.beginner.floor3.title": "INNER JOIN 주문",
    "dungeon.beginner.floor3.story": "길드 홀입니다. `employees`와 `departments`를 JOIN하여 각 직원의 `emp_name` 과 `dept_name` 을 나열하세요.",
    "dungeon.beginner.floor3.hint": "공통 열로 테이블을 연결하려면 `INNER JOIN ... ON ...` 을 사용하세요.",

    "dungeon.beginner.floor4.title": "서브쿼리 미로",
    "dungeon.beginner.floor4.story": "`sales` 테이블에서 '개발부' 직원들이 판매한 `quantity` 의 합계를 구하세요.",
    "dungeon.beginner.floor4.hint": "WHERE 안에 다른 SELECT(서브쿼리)를 넣어 조건을 단계적으로 좁힐 수 있습니다.",

    "dungeon.beginner.floor5.title": "보스전: 세일즈 골렘",
    "dungeon.beginner.floor5.story": "보스전입니다! 각 부서별로 2025-02 이후의 `quantity` 합계를 구하고, 합계가 10 미만인 부서는 제외하세요.",
    "dungeon.beginner.floor5.hint": "세 개의 테이블을 JOIN하고, WHERE로 날짜를 필터한 뒤 GROUP BY로 집계한 다음 HAVING으로 최종 필터를 적용하세요.",

    "dungeon.beginner.floor6.title": "상품 카테고리로 필터하기",
    "dungeon.beginner.floor6.story": "products 테이블에서 category = '무기' 인 상품의 name 과 price 를 표시한다.",
    "dungeon.beginner.floor6.hint": "특정 카테고리만 가져오려면 `WHERE category = '무기'` 와 같이 쓴다.",

    "dungeon.beginner.floor7.title": "몬스터의 HP로 필터하기",
    "dungeon.beginner.floor7.story": "monsters 테이블에서 hp > 20 인 행의 name 과 hp 를 표시한다.",
    "dungeon.beginner.floor7.hint": "숫자 비교에는 `>` 또는 `<` 를 사용한다.",

    "dungeon.beginner.floor8.title": "부서로 필터하는 JOIN",
    "dungeon.beginner.floor8.story": "employees 와 departments 를 INNER JOIN 하고、departments.dept_name = '개발부' 인 직원의 emp_name 과 dept_name 을 표시한다.",
    "dungeon.beginner.floor8.hint": "JOIN과 WHERE를 조합하여 결합 후에 조건으로 필터링할 수 있습니다.",

    "dungeon.beginner.floor9.title": "색상별 그룹화 및 필터링",
    "dungeon.beginner.floor9.story": "fruits 테이블을 color로 GROUP BY하고, COUNT(*) > 1인 그룹만 표시하세요.",
    "dungeon.beginner.floor9.hint": "GROUP BY와 HAVING을 함께 사용해 집계 결과에 조건을 적용하세요.",

    "dungeon.beginner.floor10.title": "서브쿼리 미로",
    "dungeon.beginner.floor10.story": "판매 기록(sales) 테이블에서 '개발부' 소속 직원들의 판매량을 집계하세요.",
    "dungeon.beginner.floor10.hint": "WHERE 절 안에 다른 SELECT 문(서브쿼리)을 넣어 단계적으로 조건을 좁힐 수 있습니다.",

    "dungeon.beginner.floor11.title": "판매 많이 한 직원 추출",
    "dungeon.beginner.floor11.story": "employees 테이블에서 sales에서 quantity > 5를 판매한 emp_id에 해당하는 emp_name을 표시하세요.",
    "dungeon.beginner.floor11.hint": "IN과 서브쿼리를 사용해 관련 행을 가져오세요.",

    "dungeon.beginner.floor12.title": "부서별 판매 합계",
        "dungeon.beginner.floor12.story": "sales와 employees, departments를 JOIN하여 dept_name별로 SUM(quantity)를 표시하세요.",
        "dungeon.beginner.floor12.hint": "JOIN과 GROUP BY를 결합해 부서별 집계를 수행하세요.",

    "dungeon.beginner.floor13.title": "날짜로 필터한 집계",
    "dungeon.beginner.floor13.story": "sale_date < '2025-02-01' 인 판매에 대해 dept_name 별로 SUM(quantity) 를 표시한다.",
        "dungeon.beginner.floor13.hint": "날짜 비교 시 포맷에 주의하세요.",

    "dungeon.beginner.floor14.title": "HAVING 으로 추가 필터링",
    "dungeon.beginner.floor14.story": "2025‑02‑01 이후 판매를 부서별로 집계하고、SUM(quantity) > 5 인 부서만 표시한다.",
        "dungeon.beginner.floor14.hint": "HAVING은 GROUP BY 결과에 대한 조건입니다.",

    "dungeon.beginner.floor15.title": "최종 시련: 부서별 판매 필터",
        "dungeon.beginner.floor15.story": "세 개의 테이블을 JOIN하고, 2025-02-01 이후의 판매를 부서별로 집계한 뒤 SUM(quantity) ≥ 10인 부서를 표시하세요.",
        "dungeon.beginner.floor15.hint": "JOIN과 WHERE, GROUP BY와 HAVING을 조합해 사용하세요.",
    
    "sql.keyword.select.desc": "테이블에서 열을 선택하는 기본 SQL 구문.",
    "sql.keyword.from.desc": "데이터를 가져올 테이블을 지정.",
    "sql.keyword.where.desc": "조건에 따라 행을 필터링.",
    "sql.keyword.group.desc": "그룹화를 시작함.",
    "sql.keyword.by.desc": "그룹화 또는 정렬의 키를 지정.",
    "sql.keyword.inner.desc": "내부 조인을 수행.",
    "sql.keyword.outer.desc": "외부 조인을 수행.",
    "sql.keyword.left.desc": "왼쪽 외부 조인을 수행.",
    "sql.keyword.right.desc": "오른쪽 외부 조인을 수행.",
    "sql.keyword.join.desc": "테이블을 결합함.",
    "sql.keyword.on.desc": "조인 조건을 지정.",
    "sql.keyword.as.desc": "열이나 테이블에 별칭을 지정.",
    "sql.keyword.sum.desc": "합계를 계산하는 집계 함수.",
    "sql.keyword.avg.desc": "평균을 계산하는 집계 함수.",
    "sql.keyword.min.desc": "최솟값을 계산하는 집계 함수.",
    "sql.keyword.max.desc": "최댓값을 계산하는 집계 함수.",
    "sql.keyword.count.desc": "행의 개수를 세는 집계 함수.",
    "sql.keyword.having.desc": "그룹화 후 조건을 지정.",
    "sql.keyword.in.desc": "값이 집합에 포함되는지 확인."
}
