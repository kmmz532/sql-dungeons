{
    "app.title": "SQL Dungeon",
    "app.title.beginner": "SQL Dungeon - Beginner -",
    "app.intro.text": "Master SQL spells and solve the dungeon's mysteries!",
    "button.sandbox": "Sandbox",
    "button.ku_next": "Clause Next",
    "button.hint": "Hint",
    "game.inventory.title": "Learned Spells",
    "game.mission.title": "Mission",
    "game.schema.title": "Table Definition",
    "game.editor.title": "Cast Spell",
    "game.result.title": "Execution Result",
    "modal.hint.title": "Hint",
    "modal.close": "Ã—",
    "game.editor.placeholder": "Enter SQL here...",
            
    "button.start": "New Game",
    "button.load": "Load Game",
    "button.retry": "Try Again",
    "button.save": "Save",
    "button.execute": "Execute",
    "button.shop": "Visit Shop",
    "button.next_floor": "Next Floor",
    "button.close": "Close",
    "button.yes": "Yes",

    "panel.inventory": "Learned Spells",
    "panel.mission": "Mission",
    "panel.schema": "Table Definition",
    "panel.spell": "Cast Spell",
    "panel.result": "Execution Result",

    "status.gold": "ðŸ’° %s G",
    "status.energy": "âš¡ %s E",

    "shop.title": "Shop",
    "shop.hint.title": "Purchase Hint",
    "shop.hint.confirm": "Would you like to see the hint?\nCosts ðŸ’° %s G.",
    "shop.hint.sage": "Sage's Voice",
    "shop.hint.no_gold": "Not enough gold!",

    "message.save_success": "Game saved!",
    "message.load_success": "Game loaded!",
    "message.empty_query": "Please enter a query.",
    "message.no_energy": "Not enough energy!",
    "message.invalid_query": "Invalid query.",
    "message.sandbox_select_from": "Sandbox: run SELECT ... FROM ... only.",
    "message.sandbox_result": "Sandbox execution result:",
    "message.dataset_label": "Dataset:",
    "message.emulation_auto_accept": "Emulation produced results and was accepted.",
    "message.emulation_results": "Incorrect, but emulation returned results:",
    "message.incorrect_try": "Incorrect. Try again.",
    "message.correct_result": "Correct! Query result:",
    "message.load_failed": "Failed to load game data.",
    "message.unknown_spell": "You haven't learned the spell '%s' yet.",
    "message.incorrect": "Incorrect. Try again.",
    "message.correct": "Correct! Query result:",
    "message.clear": "Clear!",
    "message.clear_all": "You've cleared all floors!",
    "message.next_spell": "Sage's Voice: \"The next clause should be... %s.\"",
    "message.purchase_success": "Purchased %s!",

    "item.sqldungeons.java_coffee": "Java Coffee",
    "item.sqldungeons.java_coffee.desc": "Recovers 5 Energy.",
    "item.sqldungeons.postgres_ramen": "Postgres Ramen",
    "item.sqldungeons.postgres_ramen.desc": "Recovers 15 Energy.",
    "item.sqldungeons.oracle_steak": "Oracle Steak",
    "item.sqldungeons.oracle_steak.desc": "Recovers 30 Energy.",
    "item.sqldungeons.ku_next": "Clause Next (x%d)",
    "item.sqldungeons.ku_next.desc": "A scroll that tells you the next SQL clause.",
    "item.sqldungeons.having": "Single-use 'HAVING'",
    "item.sqldungeons.having.desc": "One-time use spell for post-aggregation filtering.",

    "sql.keyword.select": "SELECT",
    "sql.keyword.from": "FROM",
    "sql.keyword.where": "WHERE",
    "sql.keyword.group": "GROUP",
    "sql.keyword.by": "BY",
    "sql.keyword.having": "HAVING",
    "sql.keyword.inner": "INNER",
    "sql.keyword.join": "JOIN",
    "sql.keyword.on": "ON",
    "sql.keyword.as": "AS",
    "sql.keyword.sum": "SUM",
    "sql.keyword.count": "COUNT",
    "sql.keyword.in": "IN",

    "sql.next.select": "SELECT",
    "sql.next.from": "FROM",
    "sql.next.where": "WHERE / JOIN / GROUP BY",
    "sql.next.group": "GROUP BY / JOIN",
    "sql.next.having": "HAVING",
    "sql.next.join": "ON",
    "sql.next.unknown": "Unknown",

    "dungeon.floor1.title": "Beginner's SELECT",
    "dungeon.floor1.story": "This is the dungeon entrance. First, find all items from the products table with a price of 1000 gold or more, showing their name and price.",
    "dungeon.floor1.hint": "Use the `WHERE` clause to filter rows based on specific conditions.",
    "dungeon.floor1.schema": "products (product_id, name, price)\n- product_id: primary key\n- name: text\n- price: integer",

    "dungeon.floor2.title": "GROUP BY Challenge",
    "dungeon.floor2.story": "A monster's den! Count the number of monsters in the monsters table by their species.",
    "dungeon.floor2.hint": "Use `GROUP BY` to aggregate data by groups.",
    "dungeon.floor2.schema": "monsters (monster_id, species, hp)\n- monster_id: primary key\n- species: text\n- hp: integer",

    "dungeon.floor3.title": "INNER JOIN Spell",
    "dungeon.floor3.story": "Welcome to the Guild Hall. Join the employees and departments tables to create a list of employee names and their department names.",
    "dungeon.floor3.hint": "Use `INNER JOIN ... ON ...` to combine two tables based on a common column.",
    "dungeon.floor3.schema": "employees (emp_id, emp_name, dept_id)\n- emp_id: primary key\n- emp_name: text\n- dept_id: integer\n\ndepartments (dept_id, dept_name)\n- dept_id: primary key\n- dept_name: text",

    "dungeon.floor4.title": "Subquery Maze",
    "dungeon.floor4.story": "Find the total quantity of sales made by employees in the 'Development' department from the sales history table.",
    "dungeon.floor4.hint": "You can use nested `SELECT` statements (subqueries) in the `WHERE` clause to filter step by step.",
    "dungeon.floor4.schema": "sales (sale_id, emp_id, quantity, date)\n- sale_id: primary key\n- emp_id: integer\n- quantity: integer\n- date: date",

    "dungeon.floor5.title": "Boss Battle! Sales Golem",
    "dungeon.floor5.story": "Boss battle! Find the total quantity of sales by department since February 2025, but only show departments with 10 or more total sales.",
    "dungeon.floor5.hint": "Join three tables, filter by date using WHERE, group by department using GROUP BY, and filter groups using HAVING!",
    "dungeon.floor5.schema": "sales (sale_id, emp_id, quantity, date)\nemployees (emp_id, emp_name, dept_id)\ndepartments (dept_id, dept_name)",

    "sql.keyword.select.desc": "Basic SQL clause to select columns from a table.",
    "sql.keyword.from.desc": "Specifies the table to retrieve data from.",
    "sql.keyword.where.desc": "Filters rows based on conditions.",
    "sql.keyword.group.desc": "Begins grouping of rows.",
    "sql.keyword.by.desc": "Specifies the key for grouping or sorting.",
    "sql.keyword.inner.desc": "Performs an inner join.",
    "sql.keyword.join.desc": "Joins tables together.",
    "sql.keyword.on.desc": "Specifies the join condition.",
    "sql.keyword.as.desc": "Assigns an alias to a column or table.",
    "sql.keyword.sum.desc": "Aggregate function to calculate the sum.",
    "sql.keyword.count.desc": "Aggregate function to count rows.",
    "sql.keyword.avg.desc": "Aggregate function to calculate the average.",
    "sql.keyword.having.desc": "Specifies conditions after grouping.",
    "sql.keyword.in.desc": "Checks if a value is in a set."
}
