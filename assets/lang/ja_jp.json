{
    "app.title": "SQLダンジョン",
    "app.title.beginner": "SQLダンジョン - 初級 -",
    "app.intro.text": "SQLの呪文を習得し、ダンジョンの謎を解き明かせ！",
    "button.sandbox": "サンドボックス",
    "button.ku_next": "句ネクスト",
    "button.hint": "？",
    "game.inventory.title": "習得呪文",
    "game.mission.title": "ミッション",
    "game.schema.title": "概念スキーマ",
    "game.editor.title": "呪文",
    "game.result.title": "実行結果",
    "modal.hint.title": "ヒント",
    "modal.close": "×",
    "game.editor.placeholder": "ここにSQLを入力...",
    
    "button.start": "新しくプレイ",
    "button.load": "コンティニュー",
    "button.retry": "もう一度挑戦する",
    "button.save": "セーブ",
    "button.execute": "実行",
    "button.shop": "ショップへ立ち寄る",
    "button.next_floor": "次のフロアへ進む",
    "button.prev_floor": "前のフロアへ戻る",
    "button.next_dungeon": "次のダンジョンへ進む",
    "button.close": "閉じる",
    "button.yes": "はい",

    "panel.inventory": "習得呪文",
    "panel.mission": "ミッション",
    "panel.schema": "概念スキーマ",
    "panel.spell": "呪文",
    "panel.result": "実行結果",

    "status.gold": "💰 %s G",
    "status.energy": "⚡ %s E",

    "shop.title": "ショップ",
    "shop.hint.title": "ヒントの購入",
    "shop.hint.confirm": "ヒントを見ますか？\n💰 %s G 消費します。",
    "shop.hint.sage": "賢者の声",
    "shop.hint.no_gold": "ゴールドが足りません！",

    "message.save_success": "セーブしました！",
    "message.load_success": "ロードしました！",
    "message.empty_query": "クエリを入力してください。",
    "message.invalid_query": "無効なクエリです。",
    "message.no_energy": "エネルギーが足りません！",
    "message.unknown_spell": "まだ覚えていない呪文「%s」が含まれています。",
    "message.incorrect": "不正解です。もう一度挑戦してください。",
    "message.correct": "正解！クエリの実行結果:",
    "message.clear": "クリア！",
    "message.clear_all": "全てのフロアを攻略しました！",
    "message.next_spell": "賢者の声: 「次に続くのはおそらく... %s 句じゃな。」",
    "message.purchase_success": "%s を購入しました！",
    "message.emulation_auto_accept": "正解！(エミュ採点) クエリの実行結果:",
    "message.emulation_results": "不正解です。クエリの実行結果:",
    "message.incorrect_try": "不正解です。もう一度挑戦してください。",
    "message.correct_result": "正解！クエリの実行結果:",
    "message.load_failed": "ゲームデータの読み込みに失敗しました。",
    "message.sandbox_select_from": "サンドボックス: SELECT ... FROM ... のみ実行できます。",
    "message.sandbox_result": "サンドボックス実行結果:",
    "message.error_table_not_found": "このテーブルは存在しません: %s",
    "message.error_attribute_not_found": "この属性は存在しません: %s",
    "message.error_where_column_missing": "WHERE 句のカラムが見つかりません: %s",
    "message.error_no_matching_rows": "条件に合う行が見つかりませんでした。",
    "message.dataset_label": "データセット:",
    "message.floor_label": "フロア %s",
    "confirm.unsaved_changes": "セーブしていません。タイトルに戻りますか？",
    "button.back_to_title": "タイトルに戻る",

    "ui.back_to_title": "タイトル画面に戻ります",
    "ui.prev_floor": "前のフロアへ戻ります",
    "ui.save": "現在のデータを保存します",
    "ui.execute": "呪文に記述されたSQLクエリを実行します",
    "ui.gold": "現在の所持金です。ショップなどで使います",
    "ui.energy": "現在のエネルギーです。呪文を実行するために消費します",
    "ui.gold_status": "所持ゴールド",
    "ui.energy_status": "所持エネルギー",
    "ui.schema_table": "%s はテーブル名です",
    "ui.schema_column": "%s はカラム名です。属性名、列名とも言います。",

    "settings.title": "設定",
    "settings.language_label": "言語:",
    "settings.enable_esc": "ESCでダイアログを閉じる",
    "settings.enable_save_shortcut": "Ctrl+Sで保存する",
    "settings.export_json": "JSONエクスポート",
    "settings.import_json": "JSONインポート",
    "settings.save": "保存",
    "settings.cancel": "キャンセル",

    "item.sqldungeons.java_coffee": "Javaコーヒー",
    "item.sqldungeons.java_coffee.desc": "エネルギーが5回復。",
    "item.sqldungeons.postgres_ramen": "Postgreラーメン",
    "item.sqldungeons.postgres_ramen.desc": "エネルギーが15回復。",
    "item.sqldungeons.oracle_steak": "Oracleステーキ",
    "item.sqldungeons.oracle_steak.desc": "エネルギーが30回復。",
    "item.sqldungeons.ku_next": "句ネクスト (%d個)",
    "item.sqldungeons.ku_next.desc": "次に続くSQL句を教えてくれる巻物。",
    "item.sqldungeons.ku_next_pack": "句ネクスト・パック",
    "item.sqldungeons.ku_next_pack.desc": "句ネクストの巻物が複数入ったパック（x5）。",
    "item.sqldungeons.having": "使い切り「HAVING」",
    "item.sqldungeons.having.desc": "集計後絞込の呪文を1回だけ使える。",
    "item.sqldungeons.consumable_having": "消費型 HAVING",
    "item.sqldungeons.consumable_having.desc": "1回だけ使えるHAVING呪文を付与する消耗品。",

    "sql.keyword.select": "SELECT",
    "sql.keyword.from": "FROM",
    "sql.keyword.where": "WHERE",
    "sql.keyword.group": "GROUP",
    "sql.keyword.by": "BY",
    "sql.keyword.having": "HAVING",
    "sql.keyword.inner": "INNER",
    "sql.keyword.join": "JOIN",
    "sql.keyword.on": "ON",
    "sql.keyword.as": "AS",
    "sql.keyword.sum": "SUM",
    "sql.keyword.count": "COUNT",
    "sql.keyword.in": "IN",

    "schema.pk": "主キー",
    "schema.ck": "候補キー",
    "schema.fk": "外部キー (参照: %s)",
    "schema.type.integer": "整数",
    "schema.type.date": "日付",
    "schema.type.timestamp": "日時",
    "schema.type.text": "テキスト",
    "schema.not_null": "NOT NULL",

    "sql.next.select": "SELECT",
    "sql.next.from": "FROM",
    "sql.next.where": "WHERE / JOIN / GROUP BY",
    "sql.next.group": "GROUP BY / JOIN",
    "sql.next.having": "HAVING",
    "sql.next.join": "ON",
    "sql.next.unknown": "不明",

    "dungeon.tutorial.prefix": "チュートリアル %s",
    "dungeon.beginner.prefix": "フロア %s",

    "dungeon.tutorial.floor1.title": "SELECT",
    "dungeon.tutorial.floor1.story": "SELECT * FROM table001 を呪文に入力して実行してみよう。",
    "dungeon.tutorial.floor1.hint": "",

    "dungeon.tutorial.floor2.title": "SELECT-2",
    "dungeon.tutorial.floor2.story": "SELECT (カラム名) FROM (テーブル名) で指定した列だけを表示できる。概念スキーマからテーブル名を確認してmessageを取り出してみよう。",
    "dungeon.tutorial.floor2.hint": "",

    "dungeon.tutorial.floor3.title": "WHERE",
    "dungeon.tutorial.floor3.story": "SELECT ... FROM ... WHERE (条件式) で特定の条件に合う行だけを絞り込める。フルーツ(fruits)テーブルから、色(color)が 'Red' のフルーツの名前(name)と色(color)を表示してみよう。",
    "dungeon.tutorial.floor3.hint": "",

    "dungeon.tutorial.floor4.title": "ORDER BY",
    "dungeon.tutorial.floor4.story": "SELECT ... FROM ... ORDER BY (カラム名) [ASC|DESC] で指定した列によって並び替えられる。フルーツ(fruits)テーブルから、価格(price)が安い順に名前(name)と価格(price)を表示してみよう。",
    "dungeon.tutorial.floor4.hint": "",

    "dungeon.tutorial.floor5.title": "GROUP BY",
    "dungeon.tutorial.floor5.story": "SELECT ... FROM ... GROUP BY (カラム名) で指定した列によってグループ化できる。フルーツ(fruits)テーブルから、色(color)ごとにフルーツの数を数えてみよう。",
    "dungeon.tutorial.floor5.hint": "",
    "dungeon.tutorial.floor6.title": "LIKEでパターン一致",
    "dungeon.tutorial.floor6.story": "LIKE 演算子でパターンマッチができる。% は 0文字以上の任意の文字列を表す。例: `SELECT name FROM fruits WHERE name LIKE '%e%'` は名前に 'e' を含む行を見つける。",
    "dungeon.tutorial.floor6.hint": "% をワイルドカードとして使える（例: '%abc%'）。",

    "dungeon.tutorial.floor7.title": "NULLを扱う（COALESCE）",
    "dungeon.tutorial.floor7.story": "NULL は「値が存在しない」ことを表す。`COALESCE(expr, fallback)` を使うと NULL のときに代替値を返せる。例: `SELECT name, COALESCE(type_id, 0) FROM users2`。",
    "dungeon.tutorial.floor7.hint": "COALESCE は左から非NULLの値を返す。",

    "dungeon.tutorial.floor8.title": "INNER JOIN で結合する",
    "dungeon.tutorial.floor8.story": "INNER JOIN（または JOIN）は結合条件が一致する行のみを返す。例: `SELECT emp_name, dept_name FROM employees INNER JOIN departments ON employees.dept_id = departments.dept_id`。",
    "dungeon.tutorial.floor8.hint": "INNER JOIN は両方のテーブルで条件に一致する行だけを返す。",

    "dungeon.tutorial.floor9.title": "LEFT JOIN で左側の全行を保持",
    "dungeon.tutorial.floor9.story": "LEFT JOIN は左テーブルの全行を返し、右テーブルに一致する行がなければ NULL が入る。例: `SELECT users2.name, usertypes.type_name FROM users2 LEFT JOIN usertypes ON users2.type_id = usertypes.type_id`。",
    "dungeon.tutorial.floor9.hint": "左テーブルの全行を保持したいときに LEFT JOIN を使う。",

    "dungeon.tutorial.floor10.title": "RIGHT JOIN で右側の全行を保持",
    "dungeon.tutorial.floor10.story": "RIGHT JOIN は右テーブルの全行を返し、左テーブルに一致する行がなければ NULL が入る。例: `SELECT colors.name, fruits2.name FROM fruits2 RIGHT JOIN colors ON fruits2.color_id = colors.id`。",
    "dungeon.tutorial.floor10.hint": "RIGHT JOIN はテーブルの順序を入れ替えた LEFT JOIN と同等。",

    "dungeon.tutorial.floor11.title": "UNION で重複を除いて結合",
    "dungeon.tutorial.floor11.story": "UNION は2つの SELECT の結果を結合し、重複行を取り除く。例: `SELECT name FROM fruits UNION SELECT name FROM fruits2`。",
    "dungeon.tutorial.floor11.hint": "UNION は重複を取り除く。",

    "dungeon.tutorial.floor12.title": "UNION ALL は重複を残す",
    "dungeon.tutorial.floor12.story": "UNION ALL は2つの SELECT を結合し、重複を取り除かない。すべての行を保持したいときに使う。",
    "dungeon.tutorial.floor12.hint": "UNION ALL は速く、重複をそのままにする。",

    "dungeon.tutorial.floor13.title": "結合後のNULLをCOALESCEで処理",
    "dungeon.tutorial.floor13.story": "結合でオプショナルなデータが存在しない場合、カラム値は NULL になる。COALESCE を使って見やすい値に置き換えよう（例: `COALESCE(usertypes.type_name, '(unknown)')`）。",
    "dungeon.tutorial.floor13.hint": "COALESCE は NULL を読みやすい値に置き換えるのに便利。",

    "dungeon.tutorial.floor14.title": "LEFT JOIN の後に集計する",
    "dungeon.tutorial.floor14.story": "LEFT JOIN で colors と fruits2 を結合し、色ごとに果物の数を数える。COUNT(col) は NULL を無視する点に注意。",
    "dungeon.tutorial.floor14.hint": "LEFT JOIN の後に GROUP BY して集計を行う。",

    "dungeon.tutorial.floor15.title": "範囲指定と結果制限",
    "dungeon.tutorial.floor15.story": "BETWEEN で数値の範囲を指定し、ORDER BY で並べ替え、LIMIT で行数を制限する。例: `SELECT name, price FROM fruits WHERE price BETWEEN 100 AND 300 ORDER BY price LIMIT 3`。",
    "dungeon.tutorial.floor15.hint": "BETWEEN は両端を含む（inclusive）ことに注意。",

    "dungeon.beginner.floor1.title": "駆け出しのSELECT文",
    "dungeon.beginner.floor1.story": "ダンジョンの入口だ。まずは商品(products)テーブルから、価格(price)が1000ゴールド以上のアイテムの名前(name)と価格(price)をすべて探し出せ。",
    "dungeon.beginner.floor1.hint": "特定の条件に合う行を絞り込むには `WHERE` 句を使う。",

    "dungeon.beginner.floor2.title": "集計とGROUP BYの試練",
    "dungeon.beginner.floor2.story": "モンスターの巣窟だ。モンスター(monsters)テーブルにて、種族(species)ごとのモンスターの数を数えよ。",
    "dungeon.beginner.floor2.hint": "グループごとに集計するには `GROUP BY` 句を使う。",

    "dungeon.beginner.floor3.title": "INNER JOINの結合呪文",
    "dungeon.beginner.floor3.story": "ギルドの広間だ。社員(employees)と部署(departments)を結合し、各社員の名前(emp_name)と部署名(dept_name)の一覧を作成せよ。",
    "dungeon.beginner.floor3.hint": "2つのテーブルを共通の列で結びつけるには `INNER JOIN ... ON ...` を使う。",

    "dungeon.beginner.floor4.title": "価格が150未満の果物を探す",
    "dungeon.beginner.floor4.story": "fruitsテーブルから price < 150 の行の name, price を表示する。",
    "dungeon.beginner.floor4.hint": "priceが150未満の行を絞るには `WHERE` 句を使い、price < 150 と書く。",

    "dungeon.beginner.floor5.title": "メッセージを取得して",
    "dungeon.beginner.floor5.story": "table001 テーブルから id = 2 の行の message を取り出す。",
    "dungeon.beginner.floor5.hint": "特定の行を指定するには `WHERE id = 2` のようにプライマリキーを使うと良い。",

    "dungeon.beginner.floor6.title": "商品のカテゴリで絞り込む",
    "dungeon.beginner.floor6.story": "productsテーブルから category = '武器' の商品の name, price を表示する。",
    "dungeon.beginner.floor6.hint": "特定カテゴリの商品のみを取り出すには `WHERE category = '武器'` のように書く。",

    "dungeon.beginner.floor7.title": "モンスターのHP絞り込み",
    "dungeon.beginner.floor7.story": "monstersテーブルから hp > 20 の行の name, hp を表示する。",
    "dungeon.beginner.floor7.hint": "数値比較は `>` や `<` を使って行う。",

    "dungeon.beginner.floor8.title": "部署でフィルタしたJOIN",
    "dungeon.beginner.floor8.story": "employees と departments を INNER JOIN し、departments.dept_name = '開発部' の従業員の emp_name と dept_name を表示する。",
    "dungeon.beginner.floor8.hint": "JOIN と WHERE を組み合わせて、結合後に条件で絞ることができる。",

    "dungeon.beginner.floor9.title": "色ごとの集計と絞込み",
    "dungeon.beginner.floor9.story": "fruits テーブルを color で GROUP BY し、COUNT(*) > 1 のグループだけ表示する。",
    "dungeon.beginner.floor9.hint": "GROUP BY と HAVING を組み合わせて集計後の条件で絞り込む。",

    "dungeon.beginner.floor10.title": "サブクエリの迷宮",
    "dungeon.beginner.floor10.story": "販売履歴(sales)テーブルにある、「開発部」の社員による売上の数量(quantity)の合計を求めよ。",
    "dungeon.beginner.floor10.hint": "`WHERE`句の中に別の`SELECT`文（サブクエリ）を入れることで、段階的に条件を絞り込める。",

    "dungeon.beginner.floor11.title": "売上が多い従業員を抽出",
    "dungeon.beginner.floor11.story": "employees テーブルから、sales で quantity > 5 を販売した emp_id に当てはまる emp_name を表示する。",
    "dungeon.beginner.floor11.hint": "IN とサブクエリを使って関連する行を取り出す。",

    "dungeon.beginner.floor12.title": "部署ごとの売上合計",
    "dungeon.beginner.floor12.story": "sales と employees, departments を JOIN して、dept_name ごとに SUM(quantity) を表示する。",
    "dungeon.beginner.floor12.hint": "JOIN と GROUP BY を組み合わせて、部署ごとの集計を行う。",

    "dungeon.beginner.floor13.title": "日付で絞った集計",
    "dungeon.beginner.floor13.story": "指定日より前の売上(sale_date < '2025-02-01')について、dept_name ごとの SUM(quantity) を表示する。",
    "dungeon.beginner.floor13.hint": "日付比較は文字列で比較する実装例もあるので、形式に注意する。",

    "dungeon.beginner.floor14.title": "集計後にHAVINGでさらに絞る",
    "dungeon.beginner.floor14.story": "2025-02-01以降の売上を部署ごとに集計し、SUM(quantity) > 5 の部署だけを表示する。",
    "dungeon.beginner.floor14.hint": "HAVING は GROUP BY の結果に対して条件を適用するために使う。",

    "dungeon.beginner.floor15.title": "最終試練：部署の売上フィルタ",
    "dungeon.beginner.floor15.story": "3つのテーブルをJOINし、2025-02-01以降の売上を部署ごとに集計して、SUM(quantity) >= 10 の部署を表示する。",
    "dungeon.beginner.floor15.hint": "3つのテーブルをJOINし、WHEREで日付を絞り、GROUP BYで集計し、HAVINGで最終絞込を行うのだ！",

    "sql.keyword.select.desc": "テーブルから列を選択するSQLの基本句。",
    "sql.keyword.from.desc": "データを取得するテーブルを指定する。",
    "sql.keyword.where.desc": "条件を指定して行を絞り込む。",
    "sql.keyword.group.desc": "グループ化の開始を示す。",
    "sql.keyword.by.desc": "グループ化や並び替えのキーを指定。",
    "sql.keyword.inner.desc": "内部結合を行う。",
    "sql.keyword.outer.desc": "外部結合を行う。",
    "sql.keyword.left.desc": "左外部結合を行う。",
    "sql.keyword.right.desc": "右外部結合を行う。",
    "sql.keyword.join.desc": "テーブル同士を結合する。",
    "sql.keyword.on.desc": "結合条件を指定する。",
    "sql.keyword.as.desc": "列やテーブルに別名を付ける。",
    "sql.keyword.sum.desc": "合計値を計算する集約関数。",
    "sql.keyword.avg.desc": "平均値を計算する集約関数。",
    "sql.keyword.min.desc": "最小値を計算する集約関数。",
    "sql.keyword.max.desc": "最大値を計算する集約関数。",
    "sql.keyword.count.desc": "件数を数える集約関数。",
    "sql.keyword.having.desc": "グループ化後の条件を指定。",
    "sql.keyword.in.desc": "指定した集合に値が含まれるか判定。"
}
